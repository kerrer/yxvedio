<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:c="http://www.springframework.org/schema/c"
  xmlns:cache="http://www.springframework.org/schema/cache" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:redis="http://www.springframework.org/schema/redis"
  xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis-1.0.xsd
        http://mybatis.org/schema/mybatis-spring  http://mybatis.org/schema/mybatis-spring.xsd">

  <bean id="redis.placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:mybatis.properties</value>
        <value>classpath:redis.properties</value>
      </list>
    </property>
  </bean>
  <context:component-scan base-package="com.yixiang.wlyx.service" />
  <!-- turn on declarative caching -->
  <cache:annotation-driven />
  <mybatis:scan base-package="com.yixiang.mybatis3.mappers" />

  <bean id="jedisShardInfo1" class="redis.clients.jedis.JedisShardInfo">
    <constructor-arg index="0" value="${redis.ip}" />
    <constructor-arg index="1" value="${redis.port}" type="int" />
  </bean>
  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxIdle" value="${redis.pool.maxIdle}" />
    <property name="minIdle" value="${redis.pool.minIdle}" />
    <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    <property name="testOnReturn" value="${redis.pool.testOnReturn}" />
    <property name="testWhileIdle" value="${redis.pool.testWhileIdle}" />
  </bean>

  <!-- <bean id="jedisSentinelPool" class="redis.clients.jedis.JedisSentinelPool"> -->
  <!-- <constructor-arg index="0" value="host0" /> -->
  <!-- <constructor-arg index="1"> -->
  <!-- <set> -->
  <!-- <value>192.168.56.41:26379</value> -->
  <!-- <value>192.168.56.42:26379</value>配置了两个哨兵 -->
  <!-- <value>192.168.56.43:26379</value> -->
  <!-- </set> -->
  <!-- </constructor-arg> -->
  <!-- <constructor-arg index="2" ref="jedisPoolConfig" /> -->
  <!-- </bean> -->

  <!-- <bean id="sentinelConfig" class="org.springframework.data.redis.connection.RedisSentinelConfiguration"> -->
  <!-- <constructor-arg name="master" value="host0" /> -->
  <!-- <constructor-arg name="sentinelHostAndPorts"> -->
  <!-- <set> -->
  <!-- <value>192.168.56.41:26379</value> -->
  <!-- <value>192.168.56.42:26379</value>配置了两个哨兵 -->
  <!-- <value>192.168.56.43:26379</value> -->
  <!-- </set> -->
  <!-- </constructor-arg> -->
  <!-- </bean> -->

  <!-- <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> -->
  <!-- <constructor-arg ref="sentinelConfig" /> -->
  <!-- </bean> -->


  <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
    p:host-name="${redis.ip}" p:port="${redis.port}" p:use-pool="true" p:poolConfig-ref="jedisPoolConfig" />



  <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />

  <!-- redis template definition -->
  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
    p:connectionFactory-ref="jedisConnectionFactory" p:keySerializer-ref="stringRedisSerializer"
    p:valueSerializer-ref="stringRedisSerializer" />

  <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
    p:connection-factory-ref="jedisConnectionFactory" />

  <!-- declare Redis Cache Manager -->
  <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
    c:template-ref="redisTemplate" />



  <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
    <property name="url" value="${mybatis.url}"></property>
    <property name="username" value="${mybatis.username}"></property>
    <property name="password" value="${mybatis.password}"></property>
  </bean>
  <!-- <bean id="dataSource2" class="org.springframework.jndi.JndiObjectFactoryBean" scope="singleton"> 
    <property name="jndiName" value="java:comp/env/jdbc/pcmDB" /> <property name="resourceRef" value="true" 
    /> </bean> -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
  </bean>
  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
    <constructor-arg index="0" ref="sqlSessionFactory" />
  </bean>
  <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
    <property name="corePoolSize" value="5" />
    <property name="maxPoolSize" value="10" />
    <property name="WaitForTasksToCompleteOnShutdown" value="true" />
  </bean>
</beans>
